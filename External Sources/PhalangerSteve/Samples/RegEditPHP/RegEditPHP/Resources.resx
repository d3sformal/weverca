<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="binary" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\binary.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="delete" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\delete.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DeleteKey" xml:space="preserve">
    <value>Do you really want to delete key {0}?</value>
  </data>
  <data name="DeleteKey_t" xml:space="preserve">
    <value>Delete key</value>
  </data>
  <data name="edit" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\edit.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ExpandHKCR" xml:space="preserve">
    <value>Dou you really want to expand key HKEY_CLASSES_ROOT?. This operation may take same time.</value>
  </data>
  <data name="ExpandHKCR_t" xml:space="preserve">
    <value>Expand HKEY_CLASSES_ROOT</value>
  </data>
  <data name="e_UnknownRoot" xml:space="preserve">
    <value>Unknown registry root</value>
  </data>
  <data name="folder" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\folder_close.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="new" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\new.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="numeric" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\numeric.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="refresh" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\refresh.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="rename" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\rename.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="string" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\string.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="UnknownValue" xml:space="preserve">
    <value>&lt;???&gt;</value>
  </data>
  <data name="UnknownValueAlt" xml:space="preserve">
    <value>Cannot interpret unknown type</value>
  </data>
  <data name="Binary_d" xml:space="preserve">
    <value>Enter binary value as hexadecimal numerals. Number of numerals must be even. Spaces are ignored.</value>
  </data>
  <data name="CreateKey_t" xml:space="preserve">
    <value>Create key</value>
  </data>
  <data name="DeleteValue" xml:space="preserve">
    <value>Dou you really want to delete value {0}?</value>
  </data>
  <data name="DeleteValues" xml:space="preserve">
    <value>Do you really want to delete selected values?</value>
  </data>
  <data name="DeleteValues_t" xml:space="preserve">
    <value>Delete values</value>
  </data>
  <data name="Error_t" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="e_3264" xml:space="preserve">
    <value>Value of property {0} can be only 32 or 64.</value>
  </data>
  <data name="e_BinaryNotEven" xml:space="preserve">
    <value>The number of numbers to represent byte array must be even.</value>
  </data>
  <data name="e_CopyValue" xml:space="preserve">
    <value>Error while copying value "{0}" from key {1} to {2}:</value>
  </data>
  <data name="e_CreateSubKey" xml:space="preserve">
    <value>Error while creating subkey {0}\{1}:</value>
  </data>
  <data name="e_DeleteDuplicated" xml:space="preserve">
    <value>Error while deleting doplicated key. Both keys remain.</value>
  </data>
  <data name="e_DeleteOriginalKey" xml:space="preserve">
    <value>The key was duplicated, but an error occured while deleting original key</value>
  </data>
  <data name="e_DeleteValue" xml:space="preserve">
    <value>Failed to delete value {0}:</value>
  </data>
  <data name="e_editUnknown" xml:space="preserve">
    <value>Value of unknown type cannot be edited.</value>
  </data>
  <data name="e_EnlistSubKeys" xml:space="preserve">
    <value>Error while getting list of subkeys of {0}:</value>
  </data>
  <data name="e_EnlistValues" xml:space="preserve">
    <value>Error while getting list of values in key{0}:</value>
  </data>
  <data name="e_InvalidName" xml:space="preserve">
    <value>Name "{0}" is invalid. Name cannot contain \.</value>
  </data>
  <data name="e_KeyExists" xml:space="preserve">
    <value>The key {0} already exists.</value>
  </data>
  <data name="e_ListViewItem" xml:space="preserve">
    <value>Value must be ListViewItem</value>
  </data>
  <data name="e_OpenSubKey" xml:space="preserve">
    <value>Error while openning subkey {0}\{1}:</value>
  </data>
  <data name="e_Rename" xml:space="preserve">
    <value>Cannot rename {0} to {1} because {1} already exists.</value>
  </data>
  <data name="e_Set" xml:space="preserve">
    <value>Value of the {0} property cannot be set.</value>
  </data>
  <data name="e_SetResourceValue" xml:space="preserve">
    <value>Cannot set value of resource</value>
  </data>
  <data name="e_Unset" xml:space="preserve">
    <value>Cannot unset property {0}.</value>
  </data>
  <data name="e_ValueExists" xml:space="preserve">
    <value>Value named {0} already exists.</value>
  </data>
  <data name="KeepBoth" xml:space="preserve">
    <value>Do you wish to keep both key?</value>
  </data>
  <data name="KeepBoth_note" xml:space="preserve">
    <value>(If you select No, original key will remain.)</value>
  </data>
  <data name="Multistring_d" xml:space="preserve">
    <value>Enter string values. Each at one line.</value>
  </data>
  <data name="NameOfNewKey" xml:space="preserve">
    <value>Enter name of new key</value>
  </data>
  <data name="Number_d" xml:space="preserve">
    <value>Chose unsigned numeric value. You can use decimal or hexadecimal input.</value>
  </data>
  <data name="RefreshHKCR" xml:space="preserve">
    <value>Do you really wan to referesh key HKEY_CLASSES_ROOT? I may take some time.</value>
  </data>
  <data name="RefreshHKCR_t" xml:space="preserve">
    <value>Refresh HKEY_CLASSES_ROOT</value>
  </data>
  <data name="String_d" xml:space="preserve">
    <value>Enter string.</value>
  </data>
  <data name="warning" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\warning.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="e_Restart" xml:space="preserve">
    <value>Failed to restart application:</value>
  </data>
  <data name="DefaultLanguage" xml:space="preserve">
    <value>(default)</value>
  </data>
  <data name="e_KeyDoesNotExist" xml:space="preserve">
    <value>The key {0} does not exist.</value>
  </data>
  <data name="JumpToKey" xml:space="preserve">
    <value>Enter full path of key</value>
  </data>
  <data name="JumpToKey_t" xml:space="preserve">
    <value>Jump to key</value>
  </data>
  <data name="JumToSameKey" xml:space="preserve">
    <value>Jump to &amp;same key under {0}</value>
  </data>
  <data name="ExportKey_t" xml:space="preserve">
    <value>Export key</value>
  </data>
  <data name="ExportSuccessful" xml:space="preserve">
    <value>Export successful</value>
  </data>
  <data name="e_GetValue" xml:space="preserve">
    <value>Failed to get value {0} from key {1}:</value>
  </data>
  <data name="e_UnknownregistryFileType" xml:space="preserve">
    <value>Unknown registry file type</value>
  </data>
  <data name="readme" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>readme.rtf;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>