<?xml version="1.0" encoding="utf-8" ?>
<docs>
  <operator name="BitNot">
    <remarks>
      <list type="table">
        <listheader>
          <term>The type of the <paramref name="x" /></term>
          <description>The action and the result</description>
        </listheader>
        <item>
          <term>
            <see cref="Int32" />
          </term>
          <description>
            The standard ~ operator is applied on <paramref name="x" /> integer. The result is of type <see cref="Int32" />.
          </description>
        </item>
        <item>
          <term>
            <see cref="Double" />
          </term>
          <description>
            <paramref name="x" /> is converted to <see cref="Int32" /> and than the standard ~ operator is applied. 
            The result is of type <see cref="Int32" />.
          </description>
        </item>
        <item>
          <term><see cref="Byte" />[]</term>
          <description>
            The standard ~ operator is applied on each byte of that array. The result is of type <see cref="Byte" />[].
          </description>
        </item>
        <item>
          <term>
            <see cref="String" />
          </term>
          <description>
            <paramref name="x" /> is converted to <see cref="Byte" />[] and standard ~ operator is applied on each 
            byte of that array. The result is of type <see cref="Byte" />[].
          </description>
        </item>
      </list>
    </remarks>
  </operator>
  <operator name="GetItem">
    <remarks>
      <list type="table">
        <listheader>
          <term>Actual type of <paramref name="var" /></term>
          <term>Action</term>
        </listheader>
        <item>
          <term><see cref="string" /> or <see cref="PhpBytes" /></term>
          <description>
            The <paramref name="key"/> is converted to an integer by <see cref="Convert.ObjectToInteger"/>.
            If the result of the conversion is negative or points beyond the last character/byte of the <paramref name="var"/>
            the <B>null</B> is returned (this is slightly different behavior from the PHP but more consistent
            paying attention to the "isset" PHP function implementation).
            Otherwise, the <paramref name="key"/>-th character and byte is wrapped into a new string and <see cref="PhpBytes"/>
            instance, respectively, and returned.
          </description>
        </item>
        <item>
          <term><see cref="PhpArray" /></term>
          <description>
            The value associated with <paramref name="key" /> is returned.
          </description>
        </item>
        <item>
          <term><see cref="PhpObject" /></term>
          <description>
            It is a fatal error to apply the operator to an instance of <see cref="PhpObject" />.
          </description>
        </item>
        <item>
          <term>otherwise</term>
          <description>
            <B>null</B> is returned.
          </description>
        </item>
      </list>
    </remarks>
  </operator>
  <operator name="SetStringItem">
    <remarks>
      <para>The <paramref name="index" /> is converted to an integer by <see cref="Convert.ObjectToInteger" />.
      If the resulting index is greater than the length of the <paramref name="str" /> string then the 
      empty space between the last character of the <paramref name="str" /> and such index is filled by spaces.</para>
      <para><paramref name="value" /> is converted to a string by <see cref="Convert.ObjectToString" />.
      The <paramref name="index" />-th character is set to the first character of that conversion result
      or the '\0' character if the conversion leads to an empty string.</para>
    </remarks>
  </operator>
  <operator name="SetBytesItem">
    <remarks>
      <para><paramref name="value" /> is converted to a bytes array via the current <see cref="Encoding"/>.
      The new byte which is an item set to is the first byte of the result of that conversion
      or the 0 byte if the conversion leads to an empty array.</para>
      <para>The <paramref name="index" /> is converted to an integer by <see cref="Convert.ObjectToInteger" />.
      If the resulting index is greater than the length of the <paramref name="bytes" /> array then the 
      empty space between the last byte of the <paramref name="bytes" /> and such index is filled by 0x20 bytes.</para>
    </remarks>
  </operator>
</docs>