<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>MemoryStack(T) Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="MemoryStack%3CT%3E class" /><meta name="System.Keywords" content="Weverca.MemoryModels.CopyMemoryModel.MemoryStack%3CT%3E class" /><meta name="System.Keywords" content="MemoryStack%3CT%3E class, about MemoryStack%3CT%3E class" /><meta name="System.Keywords" content="MemoryStack(Of T) class" /><meta name="System.Keywords" content="Weverca.MemoryModels.CopyMemoryModel.MemoryStack(Of T) class" /><meta name="System.Keywords" content="MemoryStack(Of T) class, about MemoryStack(Of T) class" /><meta name="Microsoft.Help.F1" content="Weverca.MemoryModels.CopyMemoryModel.MemoryStack`1" /><meta name="Microsoft.Help.Id" content="T:Weverca.MemoryModels.CopyMemoryModel.MemoryStack`1" /><meta name="Description" content="Implmentation of stack which contains cloneable containers. Used to model memory call stack of variables. Every instance can contain collections of indexes for each call level. Memory model then can alasyly acces global and local level of memory stack." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Weverca.MemoryModels.CopyMemoryModel" /><meta name="file" content="8484bf13-715a-66f2-f45d-12d4e17f9bba" /><meta name="guid" content="8484bf13-715a-66f2-f45d-12d4e17f9bba" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">MemoryStack<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Class</td><td class="OH_tdRunningTitleColumn">Weverca documentation</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Implmentation of stack which contains cloneable containers. Used to model memory call stack
            of variables. Every instance can contain collections of indexes for each call level. Memory model
            then can alasyly acces global and local level of memory stack. Once the stack is created the number
            of levels can not be changed. However class also provides deep copy functionality or allows 
            to add new stack level after copying.
            
            This class is not imutable.
            </div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Inheritance Hierarchy</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="ID0EBEMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBEMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Object</a><br />  <span class="selflink">Weverca.MemoryModels.CopyMemoryModel<span id="ID0EEBMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEBMAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MemoryStack<span id="ID0ECBMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECBMAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EABMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABMAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></span><br /><p></p><strong>Namespace:</strong> <a href="a536d85c-42d1-9da4-e904-509c007fa206.htm" target="">Weverca.MemoryModels.CopyMemoryModel</a><br /><strong>Assembly:</strong> <span sdata="assembly">Weverca.MemoryModels</span> (in Weverca.MemoryModels.dll) Version: 1.0.0.0 (1.0.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0ECBCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ECBCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0ECBCAAAAA_tabimgleft"></div><div id="ID0ECBCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECBCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0ECBCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECBCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0ECBCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECBCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0ECBCAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0ECBCAAAAA_tabimgright"></div></div><div id="ID0ECBCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECBCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ECBCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ECBCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECBCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECBCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECBCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ECBCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MemoryStack</span>&lt;T&gt; : <span class="identifier">IEnumerable</span>&lt;T&gt;, 
	<span class="identifier">IEnumerable</span> 
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IGenericCloneable</span>&lt;T&gt;</pre></div><div id="ID0ECBCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public class MemoryStack&lt;T&gt; : IEnumerable&lt;T&gt;, 
	IEnumerable 
where T : Object, IGenericCloneable&lt;T&gt;</pre></div><div id="ID0ECBCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">MemoryStack</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IGenericCloneable</span>(<span class="keyword">Of</span> T)})
	<span class="keyword">Implements</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> T), <span class="identifier">IEnumerable</span></pre></div><div id="ID0ECBCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Class MemoryStack(Of T As {Object, IGenericCloneable(Of T)})
	Implements IEnumerable(Of T), IEnumerable</pre></div><div id="ID0ECBCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IGenericCloneable</span>&lt;T&gt;
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">MemoryStack</span> : <span class="identifier">IEnumerable</span>&lt;T&gt;, 
	<span class="identifier">IEnumerable</span></pre></div><div id="ID0ECBCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>generic&lt;typename T&gt;
where T : Object, IGenericCloneable&lt;T&gt;
public ref class MemoryStack : IEnumerable&lt;T&gt;, 
	IEnumerable</pre></div><div id="ID0ECBCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0ECBCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECBCAAAAA');</script></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">T</span></dt><dd>Type of collection in the stack. Has to implement cloneable interface.</dd></dl><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="91d5373a-7226-5c37-3f69-1262ffa98314.htm" target="">MemoryStack<span id="ID0EDABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDABAAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Members</a></div><div class="seeAlsoStyle"><a href="a536d85c-42d1-9da4-e904-509c007fa206.htm" target="">Weverca.MemoryModels.CopyMemoryModel Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><div class="OH_feedbacklink"><a href="mailto:?subject=Weverca+documentation+MemoryStack(T)+Class+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div></div></body></html>