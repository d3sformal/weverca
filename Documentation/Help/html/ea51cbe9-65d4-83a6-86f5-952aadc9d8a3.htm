<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ArrayIndexEvaluator.Evaluate Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Evaluate method" /><meta name="System.Keywords" content="ArrayIndexEvaluator.Evaluate method" /><meta name="Microsoft.Help.F1" content="Weverca.Analysis.ExpressionEvaluator.ArrayIndexEvaluator.Evaluate" /><meta name="Microsoft.Help.Id" content="M:Weverca.Analysis.ExpressionEvaluator.ArrayIndexEvaluator.Evaluate(Weverca.AnalysisFramework.Memory.MemoryEntry,System.Collections.Generic.HashSet{Weverca.AnalysisFramework.Memory.IntegerValue},System.Collections.Generic.HashSet{Weverca.AnalysisFramework.Memory.StringValue},System.Boolean@,System.Boolean@,System.Boolean@)" /><meta name="Description" content="Evaluates all values to integer or string index of array if it is possible." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Weverca.Analysis.ExpressionEvaluator" /><meta name="file" content="ea51cbe9-65d4-83a6-86f5-952aadc9d8a3" /><meta name="guid" content="ea51cbe9-65d4-83a6-86f5-952aadc9d8a3" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">ArrayIndexEvaluator<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Evaluate Method </td><td class="OH_tdRunningTitleColumn">Weverca documentation</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Evaluates all values to integer or string index of array if it is possible.
            </div><p></p><strong>Namespace:</strong> <a href="bea84e0d-5d29-cab3-72d8-bdf042caa9b7.htm" target="">Weverca.Analysis.ExpressionEvaluator</a><br /><strong>Assembly:</strong> <span sdata="assembly">Weverca.Analysis</span> (in Weverca.Analysis.dll) Version: 1.0.0.0 (1.0.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0ECBCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0ECBCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0ECBCAAAAA_tabimgleft"></div><div id="ID0ECBCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECBCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0ECBCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECBCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0ECBCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0ECBCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0ECBCAAAAA_tab4" class="OH_CodeSnippetContainerTabDisabledNotFirst" EnableCopyCode="true" disabled="true"><a>F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0ECBCAAAAA_tabimgright"></div></div><div id="ID0ECBCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0ECBCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0ECBCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0ECBCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0ECBCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0ECBCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0ECBCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0ECBCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">Evaluate</span>(
	<span class="identifier">MemoryEntry</span> <span class="parameter">entry</span>,
	<span class="identifier">HashSet</span>&lt;<span class="identifier">IntegerValue</span>&gt; <span class="parameter">integerValues</span>,
	<span class="identifier">HashSet</span>&lt;<span class="identifier">StringValue</span>&gt; <span class="parameter">stringValues</span>,
	<span class="keyword">out</span> <span class="identifier">bool</span> <span class="parameter">isAlwaysConcrete</span>,
	<span class="keyword">out</span> <span class="identifier">bool</span> <span class="parameter">isAlwaysInteger</span>,
	<span class="keyword">out</span> <span class="identifier">bool</span> <span class="parameter">isAlwaysLegal</span>
)</pre></div><div id="ID0ECBCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public void Evaluate(
	MemoryEntry entry,
	HashSet&lt;IntegerValue&gt; integerValues,
	HashSet&lt;StringValue&gt; stringValues,
	out bool isAlwaysConcrete,
	out bool isAlwaysInteger,
	out bool isAlwaysLegal
)</pre></div><div id="ID0ECBCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">Evaluate</span> ( 
	<span class="parameter">entry</span> <span class="keyword">As</span> <span class="identifier">MemoryEntry</span>,
	<span class="parameter">integerValues</span> <span class="keyword">As</span> <span class="identifier">HashSet</span>(<span class="keyword">Of</span> <span class="identifier">IntegerValue</span>),
	<span class="parameter">stringValues</span> <span class="keyword">As</span> <span class="identifier">HashSet</span>(<span class="keyword">Of</span> <span class="identifier">StringValue</span>),
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">isAlwaysConcrete</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">isAlwaysInteger</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">isAlwaysLegal</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
)</pre></div><div id="ID0ECBCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Sub Evaluate ( 
	entry As MemoryEntry,
	integerValues As HashSet(Of IntegerValue),
	stringValues As HashSet(Of StringValue),
	&lt;OutAttribute&gt; ByRef isAlwaysConcrete As Boolean,
	&lt;OutAttribute&gt; ByRef isAlwaysInteger As Boolean,
	&lt;OutAttribute&gt; ByRef isAlwaysLegal As Boolean
)</pre></div><div id="ID0ECBCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">Evaluate</span>(
	<span class="identifier">MemoryEntry</span>^ <span class="parameter">entry</span>, 
	<span class="identifier">HashSet</span>&lt;<span class="identifier">IntegerValue</span>^&gt;^ <span class="parameter">integerValues</span>, 
	<span class="identifier">HashSet</span>&lt;<span class="identifier">StringValue</span>^&gt;^ <span class="parameter">stringValues</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">bool</span>% <span class="parameter">isAlwaysConcrete</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">bool</span>% <span class="parameter">isAlwaysInteger</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">bool</span>% <span class="parameter">isAlwaysLegal</span>
)</pre></div><div id="ID0ECBCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
void Evaluate(
	MemoryEntry^ entry, 
	HashSet&lt;IntegerValue^&gt;^ integerValues, 
	HashSet&lt;StringValue^&gt;^ stringValues, 
	[OutAttribute] bool% isAlwaysConcrete, 
	[OutAttribute] bool% isAlwaysInteger, 
	[OutAttribute] bool% isAlwaysLegal
)</pre></div><div id="ID0ECBCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div><div id="ID0ECBCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre /></div></div></div><script>addSpecificTextLanguageTagSet('ID0ECBCAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="entry"><dt><span class="parameter">entry</span></dt><dd>Type: <a href="4a0500fe-bb11-072b-a85c-5503f3e5728f.htm" target="">Weverca.AnalysisFramework.Memory<span id="ID0EBCAFACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCAFACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MemoryEntry</a><br /><span>Memory entry with all possible values to convert to index.</span></dd></dl><dl paramName="integerValues"><dt><span class="parameter">integerValues</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/bb359438" target="_blank">System.Collections.Generic<span id="ID0EBFAEACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFAEACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>HashSet</a><span id="ID0EEAEACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAEACAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><a href="d40bb559-8d11-b2d1-8db8-4e5e63f6225d.htm" target="">IntegerValue</a><span id="ID0ECAEACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAEACAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>Integer indices converted from values that are suited for it.</span></dd></dl><dl paramName="stringValues"><dt><span class="parameter">stringValues</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/bb359438" target="_blank">System.Collections.Generic<span id="ID0EBFADACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFADACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>HashSet</a><span id="ID0EEADACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEADACAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><a href="00ad3db0-1014-bbc8-778f-df9873d4f858.htm" target="">StringValue</a><span id="ID0ECADACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECADACAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>String indices that cannot be converted to integer values.</span></dd></dl><dl paramName="isAlwaysConcrete"><dt><span class="parameter">isAlwaysConcrete</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="ID0EBDACACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBDACACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Boolean</a><span id="ID0ECACACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECACACAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script><br /><span>
            Indicates that there are combination of values that can be used as concrete index or
            they are compound values. Then element does not need to be stored into unknown index.
            </span></dd></dl><dl paramName="isAlwaysInteger"><dt><span class="parameter">isAlwaysInteger</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="ID0EBDABACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBDABACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Boolean</a><span id="ID0ECABACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECABACAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script><br /><span>Indicates that all values can be converted to integer.</span></dd></dl><dl paramName="isAlwaysLegal"><dt><span class="parameter">isAlwaysLegal</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="ID0EBDAAACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBDAAACAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>Boolean</a><span id="ID0ECAAACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAAACAAAAA?vb=|cpp=%|cs=|fs=|nu=");
				</script><br /><span>Indicates that there is no compound (forbidden) value.</span></dd></dl></div><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="39a122b8-ef3c-50d2-e9ca-751529c2751e.htm" target="">ArrayIndexEvaluator Class</a></div><div class="seeAlsoStyle"><a href="793f92a5-93c0-1404-c1d2-4cf67a2d9d00.htm" target="">ArrayIndexEvaluator Members</a></div><div class="seeAlsoStyle"><a href="bea84e0d-5d29-cab3-72d8-bdf042caa9b7.htm" target="">Weverca.Analysis.ExpressionEvaluator Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><div class="OH_feedbacklink"><a href="mailto:?subject=Weverca+documentation+ArrayIndexEvaluator.Evaluate+Method++100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div></div></body></html>