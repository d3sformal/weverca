<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>BooleanConverter.EvaluateLogicalOperation Method (MemoryEntry, , MemoryEntry)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Weverca.Analysis.ExpressionEvaluator.BooleanConverter.EvaluateLogicalOperation(Weverca.AnalysisFramework.Memory.MemoryEntry,PHP.Core.AST.Operations,Weverca.AnalysisFramework.Memory.MemoryEntry)" /><meta name="Description" content="Convert all values in memory entries to boolean and perform logical operation." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Weverca.Analysis.ExpressionEvaluator" /><meta name="file" content="b38ddefd-aa90-b4e0-7754-bac3163f4ca2" /><meta name="guid" content="b38ddefd-aa90-b4e0-7754-bac3163f4ca2" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">BooleanConverter<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>EvaluateLogicalOperation Method (MemoryEntry, , MemoryEntry)</td><td class="OH_tdRunningTitleColumn">A Sandcastle Documented Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Convert all values in memory entries to boolean and perform logical operation.
            </div><p></p><strong>Namespace:</strong> <a href="bea84e0d-5d29-cab3-72d8-bdf042caa9b7.htm" target="">Weverca.Analysis.ExpressionEvaluator</a><br /><strong>Assembly:</strong> <span sdata="assembly">Weverca.Analysis</span> (in Weverca.Analysis.dll) Version: 1.0.0.0 (1.0.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDICAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDICAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDICAAAAA_tabimgleft"></div><div id="ID0EDICAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDICAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDICAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDICAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDICAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDICAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDICAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDICAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDICAAAAA_tabimgright"></div></div><div id="ID0EDICAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDICAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDICAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDICAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDICAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDICAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDICAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDICAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="identifier">Value</span> <span class="identifier">EvaluateLogicalOperation</span>(
	<span class="identifier">MemoryEntry</span> <span class="parameter">leftOperand</span>,
	<span class="identifier">Operations</span> <span class="parameter">operation</span>,
	<span class="identifier">MemoryEntry</span> <span class="parameter">rightOperand</span>
)</pre></div><div id="ID0EDICAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public Value EvaluateLogicalOperation(
	MemoryEntry leftOperand,
	Operations operation,
	MemoryEntry rightOperand
)</pre></div><div id="ID0EDICAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">EvaluateLogicalOperation</span> ( 
	<span class="parameter">leftOperand</span> <span class="keyword">As</span> <span class="identifier">MemoryEntry</span>,
	<span class="parameter">operation</span> <span class="keyword">As</span> <span class="identifier">Operations</span>,
	<span class="parameter">rightOperand</span> <span class="keyword">As</span> <span class="identifier">MemoryEntry</span>
) <span class="keyword">As</span> <span class="identifier">Value</span></pre></div><div id="ID0EDICAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Function EvaluateLogicalOperation ( 
	leftOperand As MemoryEntry,
	operation As Operations,
	rightOperand As MemoryEntry
) As Value</pre></div><div id="ID0EDICAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
<span class="identifier">Value</span>^ <span class="identifier">EvaluateLogicalOperation</span>(
	<span class="identifier">MemoryEntry</span>^ <span class="parameter">leftOperand</span>, 
	<span class="identifier">Operations</span> <span class="parameter">operation</span>, 
	<span class="identifier">MemoryEntry</span>^ <span class="parameter">rightOperand</span>
)</pre></div><div id="ID0EDICAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
Value^ EvaluateLogicalOperation(
	MemoryEntry^ leftOperand, 
	Operations operation, 
	MemoryEntry^ rightOperand
)</pre></div><div id="ID0EDICAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">member</span> <span class="identifier">EvaluateLogicalOperation</span> : 
        <span class="parameter">leftOperand</span> : <span class="identifier">MemoryEntry</span> * 
        <span class="parameter">operation</span> : <span class="identifier">Operations</span> * 
        <span class="parameter">rightOperand</span> : <span class="identifier">MemoryEntry</span> <span class="keyword">-&gt;</span> <span class="identifier">Value</span></pre></div><div id="ID0EDICAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>member EvaluateLogicalOperation : 
        leftOperand : MemoryEntry * 
        operation : Operations * 
        rightOperand : MemoryEntry -&gt; Value</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDICAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="leftOperand"><dt><span class="parameter">leftOperand</span></dt><dd>Type: <a href="4a0500fe-bb11-072b-a85c-5503f3e5728f.htm" target="">Weverca.AnalysisFramework.Memory<span id="ID0EBCACHCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCACHCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MemoryEntry</a><br /><span>The left operand of logical operation.</span></dd></dl><dl paramName="operation"><dt><span class="parameter">operation</span></dt><dd>Type: <span class="nolink">Operations</span><br /><span>Operation to be performed, only the logical one gives a result.</span></dd></dl><dl paramName="rightOperand"><dt><span class="parameter">rightOperand</span></dt><dd>Type: <a href="4a0500fe-bb11-072b-a85c-5503f3e5728f.htm" target="">Weverca.AnalysisFramework.Memory<span id="ID0EBCAAHCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCAAHCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>MemoryEntry</a><br /><span>The right operand of logical operation.</span></dd></dl></div><h4 class="subHeading">Return Value</h4>Type: <a href="29c110f0-8e5a-2595-c429-7f4607eabba3.htm" target="">Value</a><br />If operation is logical, result of the operation, otherwise <span class="code">null</span>.<a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="61ab2b7c-a161-d64e-dcfc-d925c1ee31f5.htm" target="">BooleanConverter Class</a></div><div class="seeAlsoStyle"><a href="eb6f37c0-55f2-04e0-b34b-f8ced98d7fa7.htm" target="">BooleanConverter Members</a></div><div class="seeAlsoStyle"><a href="02f225e1-a8ee-d517-aba0-6dc5967761c0.htm" target="">EvaluateLogicalOperation Overload</a></div><div class="seeAlsoStyle"><a href="bea84e0d-5d29-cab3-72d8-bdf042caa9b7.htm" target="">Weverca.Analysis.ExpressionEvaluator Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><div class="OH_feedbacklink"><a href="mailto:?subject=A+Sandcastle+Documented+Class+Library+BooleanConverter.EvaluateLogicalOperation+Method+(MemoryEntry%2c+%2c+MemoryEntry)+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div></div></body></html>