<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>AbstractValueVisitor.VisitGenericIntervalValue(T) Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="VisitGenericIntervalValue%3CT%3E method" /><meta name="System.Keywords" content="VisitGenericIntervalValue(Of T) method" /><meta name="System.Keywords" content="AbstractValueVisitor.VisitGenericIntervalValue%3CT%3E method" /><meta name="System.Keywords" content="AbstractValueVisitor.VisitGenericIntervalValue(Of T) method" /><meta name="Microsoft.Help.F1" content="Weverca.AnalysisFramework.Memory.AbstractValueVisitor.VisitGenericIntervalValue``1" /><meta name="Microsoft.Help.Id" content="M:Weverca.AnalysisFramework.Memory.AbstractValueVisitor.VisitGenericIntervalValue``1(Weverca.AnalysisFramework.Memory.IntervalValue{``0})" /><meta name="Description" content="Visits" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Weverca.AnalysisFramework.Memory" /><meta name="file" content="266959f3-742a-8216-3401-cd09547c9a76" /><meta name="guid" content="266959f3-742a-8216-3401-cd09547c9a76" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">AbstractValueVisitor<span id="ID0EFBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>VisitGenericIntervalValue<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Method </td><td class="OH_tdRunningTitleColumn">A Sandcastle Documented Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Visits <a href="4dba7774-57f1-8a50-f96e-7af994985ab5.htm" target="">IntervalValue<span id="ID0ECAMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAMAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EAAMAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAAMAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script></a></div><p></p><strong>Namespace:</strong> <a href="9b74f399-a570-95af-108e-17d5e918a224.htm" target="">Weverca.AnalysisFramework.Memory</a><br /><strong>Assembly:</strong> <span sdata="assembly">Weverca.AnalysisFramework</span> (in Weverca.AnalysisFramework.dll) Version: 1.0.0.0 (1.0.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDFCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDFCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDFCAAAAA_tabimgleft"></div><div id="ID0EDFCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDFCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDFCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDFCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDFCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDFCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDFCAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDFCAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDFCAAAAA_tabimgright"></div></div><div id="ID0EDFCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDFCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDFCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDFCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDFCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDFCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDFCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDFCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">VisitGenericIntervalValue</span>&lt;T&gt;(
	<span class="identifier">IntervalValue</span>&lt;T&gt; <span class="parameter">value</span>
)
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IComparable</span>, <span class="identifier">IComparable</span>&lt;T&gt;, <span class="identifier">IEquatable</span>&lt;T&gt;</pre></div><div id="ID0EDFCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public virtual void VisitGenericIntervalValue&lt;T&gt;(
	IntervalValue&lt;T&gt; value
)
where T : Object, IComparable, IComparable&lt;T&gt;, IEquatable&lt;T&gt;</pre></div><div id="ID0EDFCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Overridable</span> <span class="keyword">Sub</span> <span class="identifier">VisitGenericIntervalValue</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IComparable</span>, <span class="identifier">IComparable</span>(<span class="keyword">Of</span> T), <span class="identifier">IEquatable</span>(<span class="keyword">Of</span> T)}) ( 
	<span class="parameter">value</span> <span class="keyword">As</span> <span class="identifier">IntervalValue</span>(<span class="keyword">Of</span> T)
)</pre></div><div id="ID0EDFCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Overridable Sub VisitGenericIntervalValue(Of T As {Object, IComparable, IComparable(Of T), IEquatable(Of T)}) ( 
	value As IntervalValue(Of T)
)</pre></div><div id="ID0EDFCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IComparable</span>, <span class="identifier">IComparable</span>&lt;T&gt;, <span class="identifier">IEquatable</span>&lt;T&gt;
<span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">VisitGenericIntervalValue</span>(
	<span class="identifier">IntervalValue</span>&lt;T&gt;^ <span class="parameter">value</span>
)</pre></div><div id="ID0EDFCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
generic&lt;typename T&gt;
where T : Object, IComparable, IComparable&lt;T&gt;, IEquatable&lt;T&gt;
virtual void VisitGenericIntervalValue(
	IntervalValue&lt;T&gt;^ value
)</pre></div><div id="ID0EDFCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">abstract</span> <span class="identifier">VisitGenericIntervalValue</span> : 
        <span class="parameter">value</span> : <span class="identifier">IntervalValue</span>&lt;'T&gt; <span class="keyword">-&gt;</span> <span class="keyword">unit</span>  <span class="keyword">when</span> 'T : <span class="identifier">Object</span> and <span class="identifier">IComparable</span> and <span class="identifier">IComparable</span>&lt;'T&gt; and <span class="identifier">IEquatable</span>&lt;'T&gt;
<span class="keyword">override</span> <span class="identifier">VisitGenericIntervalValue</span> : 
        <span class="parameter">value</span> : <span class="identifier">IntervalValue</span>&lt;'T&gt; <span class="keyword">-&gt;</span> <span class="keyword">unit</span>  <span class="keyword">when</span> 'T : <span class="identifier">Object</span> and <span class="identifier">IComparable</span> and <span class="identifier">IComparable</span>&lt;'T&gt; and <span class="identifier">IEquatable</span>&lt;'T&gt;</pre></div><div id="ID0EDFCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>abstract VisitGenericIntervalValue : 
        value : IntervalValue&lt;'T&gt; -&gt; unit  when 'T : Object and IComparable and IComparable&lt;'T&gt; and IEquatable&lt;'T&gt;
override VisitGenericIntervalValue : 
        value : IntervalValue&lt;'T&gt; -&gt; unit  when 'T : Object and IComparable and IComparable&lt;'T&gt; and IEquatable&lt;'T&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDFCAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="value"><dt><span class="parameter">value</span></dt><dd>Type: <a href="4dba7774-57f1-8a50-f96e-7af994985ab5.htm" target="">Weverca.AnalysisFramework.Memory<span id="ID0EBFAAECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFAAECAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntervalValue</a><span id="ID0EEAAECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAAECAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparam">T</span></span><span id="ID0ECAAECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAAECAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span>The interval of numbers to visit</span></dd></dl></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">T</span></dt><dd>Type of interval domain</dd></dl><h4 class="subHeading">Implements</h4><a href="0c0837e5-bd13-4288-c74e-4fe5437666da.htm" target="">IValueVisitor<span id="ID0EJBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>VisitGenericIntervalValue<span id="ID0EHBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHBCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EFBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>(IntervalValue<span id="ID0EDBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script>T<span id="ID0EBBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</a><br /><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="94bffd25-05d6-232c-62fe-6f5fe0424ad1.htm" target="">AbstractValueVisitor Class</a></div><div class="seeAlsoStyle"><a href="cccba1cc-b474-f8dc-f29b-d6b38d5aba7f.htm" target="">AbstractValueVisitor Members</a></div><div class="seeAlsoStyle"><a href="9b74f399-a570-95af-108e-17d5e918a224.htm" target="">Weverca.AnalysisFramework.Memory Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><div class="OH_feedbacklink"><a href="mailto:?subject=A+Sandcastle+Documented+Class+Library+AbstractValueVisitor.VisitGenericIntervalValue(T)+Method++100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div></div></body></html>