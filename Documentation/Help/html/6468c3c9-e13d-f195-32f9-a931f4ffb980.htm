<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LogicalOperation.AbstractAnd(T) Method (FlowOutputSet, IntervalValue(T))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})" /><meta name="Description" content="summaryM:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Weverca.Analysis.ExpressionEvaluator" /><meta name="file" content="6468c3c9-e13d-f195-32f9-a931f4ffb980" /><meta name="guid" content="6468c3c9-e13d-f195-32f9-a931f4ffb980" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">LogicalOperation<span id="ID0EJBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EJBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>AbstractAnd<span id="ID0EHBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EHBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span><span id="ID0EFBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EFBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script> Method (FlowOutputSet, IntervalValue<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="typeparameter">T</span><span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script>)</td><td class="OH_tdRunningTitleColumn">A Sandcastle Documented Class Library</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})"]</p></div><p></p><strong>Namespace:</strong> <a href="bea84e0d-5d29-cab3-72d8-bdf042caa9b7.htm" target="">Weverca.Analysis.ExpressionEvaluator</a><br /><strong>Assembly:</strong> <span sdata="assembly">Weverca.Analysis</span> (in Weverca.Analysis.dll) Version: 1.0.0.0 (1.0.0.0)<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDHCAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDHCAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDHCAAAAA_tabimgleft"></div><div id="ID0EDHCAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDHCAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDHCAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDHCAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDHCAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDHCAAAAA_tabimgright"></div></div><div id="ID0EDHCAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDHCAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDHCAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDHCAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDHCAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDHCAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDHCAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDHCAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">Value</span> <span class="identifier">AbstractAnd</span>&lt;T&gt;(
	<span class="identifier">FlowOutputSet</span> <span class="parameter">outset</span>,
	<span class="identifier">IntervalValue</span>&lt;T&gt; <span class="parameter">intervalOperand</span>
)
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IComparable</span>, <span class="identifier">IComparable</span>&lt;T&gt;, <span class="identifier">IEquatable</span>&lt;T&gt;</pre></div><div id="ID0EDHCAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public static Value AbstractAnd&lt;T&gt;(
	FlowOutputSet outset,
	IntervalValue&lt;T&gt; intervalOperand
)
where T : Object, IComparable, IComparable&lt;T&gt;, IEquatable&lt;T&gt;</pre></div><div id="ID0EDHCAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">AbstractAnd</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IComparable</span>, <span class="identifier">IComparable</span>(<span class="keyword">Of</span> T), <span class="identifier">IEquatable</span>(<span class="keyword">Of</span> T)}) ( 
	<span class="parameter">outset</span> <span class="keyword">As</span> <span class="identifier">FlowOutputSet</span>,
	<span class="parameter">intervalOperand</span> <span class="keyword">As</span> <span class="identifier">IntervalValue</span>(<span class="keyword">Of</span> T)
) <span class="keyword">As</span> <span class="identifier">Value</span></pre></div><div id="ID0EDHCAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>Public Shared Function AbstractAnd(Of T As {Object, IComparable, IComparable(Of T), IEquatable(Of T)}) ( 
	outset As FlowOutputSet,
	intervalOperand As IntervalValue(Of T)
) As Value</pre></div><div id="ID0EDHCAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">public</span>:
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="identifier">Object</span>, <span class="identifier">IComparable</span>, <span class="identifier">IComparable</span>&lt;T&gt;, <span class="identifier">IEquatable</span>&lt;T&gt;
<span class="keyword">static</span> <span class="identifier">Value</span>^ <span class="identifier">AbstractAnd</span>(
	<span class="identifier">FlowOutputSet</span>^ <span class="parameter">outset</span>, 
	<span class="identifier">IntervalValue</span>&lt;T&gt;^ <span class="parameter">intervalOperand</span>
)</pre></div><div id="ID0EDHCAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>public:
generic&lt;typename T&gt;
where T : Object, IComparable, IComparable&lt;T&gt;, IEquatable&lt;T&gt;
static Value^ AbstractAnd(
	FlowOutputSet^ outset, 
	IntervalValue&lt;T&gt;^ intervalOperand
)</pre></div><div id="ID0EDHCAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">AbstractAnd</span> : 
        <span class="parameter">outset</span> : <span class="identifier">FlowOutputSet</span> * 
        <span class="parameter">intervalOperand</span> : <span class="identifier">IntervalValue</span>&lt;'T&gt; <span class="keyword">-&gt;</span> <span class="identifier">Value</span>  <span class="keyword">when</span> 'T : <span class="identifier">Object</span> and <span class="identifier">IComparable</span> and <span class="identifier">IComparable</span>&lt;'T&gt; and <span class="identifier">IEquatable</span>&lt;'T&gt;</pre></div><div id="ID0EDHCAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>static member AbstractAnd : 
        outset : FlowOutputSet * 
        intervalOperand : IntervalValue&lt;'T&gt; -&gt; Value  when 'T : Object and IComparable and IComparable&lt;'T&gt; and IEquatable&lt;'T&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDHCAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="outset"><dt><span class="parameter">outset</span></dt><dd>Type: <a href="03685608-c58b-fd83-90a0-47fc33ba5a12.htm" target="">Weverca.AnalysisFramework<span id="ID0EBCABGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCABGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>FlowOutputSet</a><br /><span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="outset"/&gt; documentation for "M:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})"]</p></span></dd></dl><dl paramName="intervalOperand"><dt><span class="parameter">intervalOperand</span></dt><dd>Type: <a href="4dba7774-57f1-8a50-f96e-7af994985ab5.htm" target="">Weverca.AnalysisFramework.Memory<span id="ID0EBFAAGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBFAAGCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntervalValue</a><span id="ID0EEAAGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EEAAGCAAAAA?vb=(Of |cpp=&lt;|cs=&lt;|fs=&lt;'|nu=(");
				</script><span class="selflink"><span class="typeparam">T</span></span><span id="ID0ECAAGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0ECAAGCAAAAA?vb=)|cpp=&gt;|cs=&gt;|fs=&gt;|nu=)");
				</script><br /><span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="intervalOperand"/&gt; documentation for "M:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})"]</p></span></dd></dl></div><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Type Parameters</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><dl><dt><span class="parameter">T</span></dt><dd><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})"]</p></dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="29c110f0-8e5a-2595-c429-7f4607eabba3.htm" target="">Value</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:Weverca.Analysis.ExpressionEvaluator.LogicalOperation.AbstractAnd``1(Weverca.AnalysisFramework.FlowOutputSet,Weverca.AnalysisFramework.Memory.IntervalValue{``0})"]</p><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="1317fe2c-4bce-6621-e500-475e8d2eaa4f.htm" target="">LogicalOperation Class</a></div><div class="seeAlsoStyle"><a href="39a56a7a-fee7-b988-f5cd-d7e3659720d4.htm" target="">LogicalOperation Members</a></div><div class="seeAlsoStyle"><a href="7bece9f6-576f-ab89-888f-61a37dde1a12.htm" target="">AbstractAnd Overload</a></div><div class="seeAlsoStyle"><a href="bea84e0d-5d29-cab3-72d8-bdf042caa9b7.htm" target="">Weverca.Analysis.ExpressionEvaluator Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p /><div class="OH_feedbacklink"><a href="mailto:?subject=A+Sandcastle+Documented+Class+Library+LogicalOperation.AbstractAnd(T)+Method+(FlowOutputSet%2c+IntervalValue(T))+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic.</div></div></body></html>